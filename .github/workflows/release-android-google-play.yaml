# For setup instructions regarding this workflow, see https://www.nikl.me/blog/2023/github_workflow_to_publish_android_app/

name: release-android-google-play

on:
  workflow_dispatch:
    inputs:
      version:
        description: "GitHub Release"
        required: false
        type: string
      play_release:
        description: "Release name from google play console"
        required: true
        type: string

# ToDo: adapt names
env:
  # used for uploading the app to a GitHub release
  ITCH_GAME: ${{ secrets.ITCH_GAME }}
  BUNDLE_PATH: "target/x/release/android/mobile.aab"
  PACKAGE_NAME: "com.ngoprojects.bevygame"
  # release track; you can promote a build to "higher" tracks in the play console or publish to a different track directly
  # see track at https://github.com/r0adkll/upload-google-play#inputs for more options
  TRACK: internal
  MOBILE_DIRECTORY: mobile

permissions:
  contents: write

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - name: Get version
        id: get-version
        run: echo "version=$(grep '^version = .*"' Cargo.toml | sed -e 's/version = //' -e 's/"//g')" >> $GITHUB_OUTPUT
    outputs:
      version: ${{ inputs.version || steps.get-version.outputs.version }}
  bundle-sign-release:
    runs-on: ubuntu-latest
    needs: get-version
    env:
      VERSION: ${{ needs.get-version.outputs.version }}
    timeout-minutes: 40
    steps:
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev lld llvm libwayland-dev
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Add Android targets
        run: rustup target add aarch64-linux-android armv7-linux-androideabi
      - name: Install cargo-binstall
        run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
      - name: Install xbuild
        run: cargo binstall --git https://github.com/NiklasEi/xbuild --bin-dir x xbuild -y
      - name: Build app bundle
        run: |
          cd ${{ env.MOBILE_DIRECTORY }}
          x doctor
          x build --release --platform android --store play
      - name: sign app bundle
        run: |
          KEYSTORE_PATH=${{ runner.temp }}/upload-keystore.jks
          echo -n "${{ secrets.PLAYSTORE_KEYSTORE }}" | base64 --decode > $KEYSTORE_PATH
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore $KEYSTORE_PATH -storepass "${{ secrets.PLAYSTORE_KEYSTORE_PASSWORD }}" ${{ env.BUNDLE_PATH }} upload
      - name: Upload self-signed bundle to GitHub
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.BUNDLE_PATH }}
          asset_name: ${{ env.ITCH_GAME }}-${{ env.VERSION }}-android.aab
          release_name: ${{ env.VERSION }}
          tag: ${{ env.VERSION }}
          overwrite: true
      - name: prepare Google play store secrets
        run: |
          SERVICE_ACCOUNT=${{ runner.temp }}/service-account.json
          echo -n "${{ secrets.PLAYSTORE_SERVICE_ACCOUNT }}" | base64 --decode > $SERVICE_ACCOUNT
      - name: upload bundle to Google play store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ runner.temp }}/service-account.json
          packageName: ${{ env.PACKAGE_NAME }}
          releaseName: ${{ inputs.play_release }}
          releaseFiles: ${{ env.BUNDLE_PATH }}
          track: ${{ env.TRACK }}
